shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/.active-rstudio-document', echo=TRUE)
url <- "http://www.holiday.com.tw/room/newprice/136.html"
tab <- readHTMLTable(url, stringsAsFactors=FALSE)
library(XML)
url <- "http://www.holiday.com.tw/room/newprice/136.html"
tab <- readHTMLTable(url, stringsAsFactors=FALSE)
tab
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
url <- "http://www.holiday.com.tw/room/newprice/136.html"
a <- fromJSON(url);a
rm(list=ls())
MTWT <- "https://github.com/WeiLunLo/KTVcaculator/testKTVcalculator/boxMTWT.csv"
boxMTWT <- read.csv(url,header = T, sep = ",")
boxMTWT <- read.csv(MTWT,header = T, sep = ",")
MTWT <- "https://weilunlo.github.io/KTVcaculator/testKTVcalculator/boxMTWT.csv"
boxMTWT <- read.csv(MTWT,header = T, sep = ",")
View(boxMTWT)
boxSun <- read.csv(Sun,header = T, sep = ",")
MTWT <- "https://weilunlo.github.io/KTVcaculator/testKTVcalculator/boxMTWT.csv"
boxMTWT <- read.csv(MTWT,header = T, sep = ",")
Fri <- "https://weilunlo.github.io/KTVcaculator/testKTVcalculator/boxFri.csv"
boxFri <- read.csv(Fri,header = T, sep = ",")
Sat <- "https://weilunlo.github.io/KTVcaculator/testKTVcalculator/boxSat.csv"
boxSat <- read.csv(Sat,header = T, sep = ",")
Sun <- "https://weilunlo.github.io/KTVcaculator/testKTVcalculator/boxSun.csv"
boxSun <- read.csv(Sun,header = T, sep = ",")
View(boxSun)
names(boxFri)
source(global.R)
source("global.R")
shiny::runApp()
runApp()
View(boxFri)
View(boxMTWT)
names(boxMTWT) <- c("分店", "迷你(2~3人)","小(4~6人)", "中(7~9人)","大(10~12人)", "特大(13~15)",
"小VIP(15~18人)","中VIP(15~18人)","VIP(18人up)","0點","1點","2點","3點","4點",
"5點","6點","7點","8點","9點","10點","11點","12點","13點","14點","15點","16點",
"17點","18點","19點","20點","21點","22點","23點")
View(boxMTWT)
names(boxMTWT) <- c("分店", "迷你(2~3人)","小(4~6人)", "中(7~9人)","大(10~12人)", "特大(13~15)",
"小VIP(15~18人)","中VIP(15~18人)","VIP(18人up)","0點","1點","2點","3點","4點",
"5點","6點","7點","8點","9點","10點","11點","12點","13點","14點","15點","16點",
"17點","18點","19點","20點","21點","22點","23點","店","地址","電話","威力卡")
View(boxMTWT)
runApp()
runApp()
names(boxMTWT) <- c("分店", "迷你(2~3人)","小(4~6人)", "中(7~9人)","大(10~12人)", "特大(13~15)",
"小VIP(15~18人)","中VIP(15~18人)","VIP(18人up)","0點","1點","2點","3點","4點",
"5點","6點","7點","8點","9點","10點","11點","12點","13點","14點","15點","16點",
"17點","18點","19點","20點","21點","22點","23點","店","地址","電話","威力卡")
View(boxMTWT)
runApp()
runApp()
View(boxFri)
runApp()
runApp()
runApp()
runApp()
runApp()
View(boxMTWT)
View(boxMTWT)
View(boxSat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?eventReactive
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(boxSun)
View(boxMTWT)
View(boxMTWT)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(boxFri)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(boxFri)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
if (input$weekday == 7){
data <- boxSun
} else if (input$weekday == 5){
data <- boxFri
} else if (input$weekday == 6){
data <- boxSat
} else {
data <- boxMTWT
}
View(boxMTWT)
runApp()
runApp()
runApp()
View(boxFri)
runApp()
runApp()
runApp()
?is.na
runApp()
?na.omit
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
na.omit(DF)
View(boxMTWT)
class(boxMTWT)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?transmute
runApp()
ncol(boxFri)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(boxFri)
runApp()
setwd("C:/Users/acer/Desktop/KTVcaculator/testKTVcalculator")
data <- readLines("boxMTWT.csv", encoding="big5") # 讀取實價登入資料，是一行一行讀取進來。
data <- iconv(data, "big5", "utf8") 將資料轉成 UTF-8。
data <- iconv(data, "big5", "utf8") #將資料轉成 UTF-8。
column_count <- length(strsplit(data[1], ",")[[1]])
row_count <- length(data) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count)
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(data[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
write.table(fix_data[2:row_count,], file = "boxMTWTNew.CSV", sep = ",", col.names = fix_data[1,])
data <- readLines("boxFri.csv", encoding="big5") # 讀取實價登入資料，是一行一行讀取進來。
data <- iconv(data, "big5", "utf8") #將資料轉成 UTF-8。
column_count <- length(strsplit(data[1], ",")[[1]])
row_count <- length(data) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count)
# 建立一個空的 NA 矩陣，維度來自於 row_count 與 column_count。
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(data[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
write.table(fix_data[2:row_count,], file = "boxFriNew.CSV", sep = ",", col.names = fix_data[1,])
# 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
data <- readLines("boxSat.csv", encoding="big5") # 讀取實價登入資料，是一行一行讀取進來。
data <- iconv(data, "big5", "utf8") #將資料轉成 UTF-8。
column_count <- length(strsplit(data[1], ",")[[1]])
row_count <- length(data) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count)
# 建立一個空的 NA 矩陣，維度來自於 row_count 與 column_count。
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(data[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
write.table(fix_data[2:row_count,], file = "boxSatNew.CSV", sep = ",", col.names = fix_data[1,])
# 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
data <- readLines("boxSun.csv", encoding="big5") # 讀取實價登入資料，是一行一行讀取進來。
data <- iconv(data, "big5", "utf8") #將資料轉成 UTF-8。
column_count <- length(strsplit(data[1], ",")[[1]])
row_count <- length(data) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count)
# 建立一個空的 NA 矩陣，維度來自於 row_count 與 column_count。
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(data[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
write.table(fix_data[2:row_count,], file = "boxSunNew.CSV", sep = ",", col.names = fix_data[1,])
# 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
a <- boxFri
View(boxFri)
b <- boxFri[,10]
a[,b] <- 0
a[,b] <- NA
a$b <- 0
View(a)
runApp()
?mutate
runApp()
class(boxFri[,15])
class(a$b)
runApp()
?apply
View(a)
a <- boxFri[,10:14]
apply[a,2,sum]
apply[a,1,sum]
apply[a,1,mutate]
margin.table(a,1)
margin.table(a,2)
c <-as.array(a)
View(a)
c <-as.array(a)
colSums(a)
rowSums(a)
View(a)
runApp()
runApp()
runApp()
runApp()
c <- a[,1]
class(c)
as.data.frame(c)
class(c)
d <- as.data.frame(c)
class(d)
runApp()
names(a)
colnames(a[1])
runApp()
View(boxFri)
runApp()
View(boxFri)
runApp()
runApp()
e <-colnames(a)
e
class(e)
runApp()
e <-colnames(a[1])
runApp()
runApp()
runApp()
?ifelse
e
e <-colnames(a[1])
e
d
colnames(d)
ifelse(colnames(d)=="c", discount= 0.9, discount= 1);discount
discount <-0
ifelse(colnames(d)=="c", discount+ 0.9, discount+ 1);discount
ifelse(colnames(d)=="c", discount+ 0.9, discount+ 1);discount
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
?arrange
runApp()
runApp()
colnames(finaltable$temptable)
colnames(finaltable)
View(boxMTWT)
colnames(a)
colnames(a[1]) <- "tt"
View(a)
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
View(boxMTWT)
runApp()
runApp()
runApp()
View(boxFri)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
shiny::runApp()
shiny::runApp()
runApp()
View(boxFri)
View(boxFri)
runApp()
runApp()
install.packages("stringi")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a <- as.character(c(1:4))
dd = as.data.frame(a)
View(dd)
runApp()
runApp()
runApp()
runApp()
runApp()
names(boxFri[4])
runApp()
colnames(boxFri[3])
runApp()
shiny::runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
